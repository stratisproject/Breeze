#  from https://www.appveyor.com/docs/appveyor-yml/

# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}

version: 0.1.0.{build}
pull_requests:
  do_not_increment_build_number: true

# branches to build
branches:
  # whitelist
  only:
    - master

#---------------------------------#
#    environment configuration    #
#---------------------------------#

image: Visual Studio 2017
clone_folder: c:\projects\breeze
configuration:
 # - Debug
  - Release

build:
  parallel: true

environment:
  matrix:
  - win_runtime: win7-x64
    arch: x64
    plat: win32
  - win_runtime: win7-x86
    arch: ia32
    plat: win32
  - win_runtime: win10-x64
    arch: x64
    plat: win32
  - win_runtime: win10-x86
    arch: ia32
    plat: win32

init:
- ps: |
      $env:log_prefix = "[$env:win_runtime][$env:configuration]"
      $env:app_output_name = "breeze-$env:win_runtime-$env:configuration"
      $env:api_output_name = "api-$env:win_runtime-$env:configuration"
      if ($env:APPVEYOR_REPO_TAG -eq "false") { $env:APPVEYOR_REPO_TAG_NAME = "cd-unstable" }

#---------------------------------#
#       build configuration       #
#---------------------------------#
before_build:
- ps: |
      Write-Host "*--------------------------------*" -foregroundcolor "magenta"
      Write-Host "current environment variables:" -foregroundcolor "magenta"
      Write-Host "Windows runtime: $env:win_runtime" -foregroundcolor "magenta"
      Write-Host "Build directory: $env:APPVEYOR_BUILD_FOLDER" -foregroundcolor "magenta"
      Write-Host "Configuration: $env:configuration" -foregroundcolor "magenta"
      Write-Host "App output name: $env:app_output_name" -foregroundcolor "magenta"
      Write-Host "Branch: $env:APPVEYOR_REPO_BRANCH" -foregroundcolor "magenta"
      Write-Host "Tag is set: $env:APPVEYOR_REPO_TAG" -foregroundcolor "magenta"
      Write-Host "Tag: $env:APPVEYOR_REPO_TAG_NAME" -foregroundcolor "magenta"
      Write-Host "Commit: $env:APPVEYOR_REPO_COMMIT" -foregroundcolor "magenta"
      Write-Host "Commit message: $env:APPVEYOR_REPO_COMMIT_MESSAGE" -foregroundcolor "magenta"
      Write-Host "*--------------------------------*" -foregroundcolor "magenta"

      Write-Host "$env:log_prefix STARTED restoring dotnet and npm packages" -foregroundcolor "magenta"
      
      # Initialize dependencies
      git submodule update --init --recursive
     
      cd $env:APPVEYOR_BUILD_FOLDER/Breeze.UI

      Install-Product node 6
      npm install
      Write-Host "$env:log_prefix FINISHED restoring dotnet and npm packages" -foregroundcolor "magenta"
      if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode) }
    
build_script:
- ps: |
      Write-Host "$env:log_prefix running 'dotnet build'" -foregroundcolor "magenta"
      cd $env:APPVEYOR_BUILD_FOLDER/StratisBitcoinFullNode/Stratis.BreezeD
      dotnet restore -v m
      dotnet build -c $env:configuration -r $env:win_runtime -v m 

      Write-Host "$env:log_prefix running 'dotnet publish'" -foregroundcolor "magenta"
      dotnet publish -c $env:configuration -v m -r $env:win_runtime -o $env:APPVEYOR_BUILD_FOLDER\dotnet_out\$env:win_runtime
      
      Write-Host "$env:log_prefix running 'npm run'" -foregroundcolor "magenta"
      cd $env:APPVEYOR_BUILD_FOLDER/Breeze.UI
      npm run build:prod
      Write-Host "$env:log_prefix packaging breeze" -foregroundcolor "magenta"
      node package.js --platform=$env:plat --arch=$env:arch --path=$env:APPVEYOR_BUILD_FOLDER\breeze_out
      
      Write-Host "$env:log_prefix copying the Breeze api into the app" -foregroundcolor "magenta"
      New-Item -Path $env:APPVEYOR_BUILD_FOLDER\breeze_out\breeze-ui-$env:plat-$env:arch\resources\app\assets\daemon -ItemType directory 
      xcopy /s $env:APPVEYOR_BUILD_FOLDER\dotnet_out\$env:win_runtime\* $env:APPVEYOR_BUILD_FOLDER\breeze_out\breeze-ui-$env:plat-$env:arch\resources\app\assets\daemon\
      Write-Host "$env:log_prefix zipping the result" -foregroundcolor "magenta"
      7z a  $env:APPVEYOR_BUILD_FOLDER\breeze_out\$env:app_output_name.zip $env:APPVEYOR_BUILD_FOLDER\breeze_out\breeze-ui-$env:plat-$env:arch
            
      Write-Host "[$env:configuration][$env:win_runtime] FINISHED dotnet build" -foregroundcolor "magenta"
      if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode)  }
    
test_script:
- ps: |
      Write-Host "$env:log_prefix no tests to run" -foregroundcolor "magenta"
      #if ($LastExitCode -ne 0) { $host.SetShouldExit($LastExitCode)  }

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

# pushing all files in build directory recursively
artifacts:
- path: breeze_out\*.zip
  name: Breeze app
  
#----------------------------------#
#      deployment configuration    #
#----------------------------------#

deploy:
  tag: $(APPVEYOR_REPO_TAG_NAME)
  description: ''
  provider: GitHub
  auth_token:
    secure: $(secure_github_key) # your encrypted token from GitHub
  artifact: breeze_out\*.zip
  draft: false
  prerelease: true
  force_update: true
  on:
    branch: master                 # release from master branch only